{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/startek/Desktop/Grace/src/register.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Input, Item, Container, Button, Text } from 'native-base';\nimport { withFirebase } from \"./firebase/firebase\";\n\nvar RegisterScreen = function (_React$Component) {\n  _inherits(RegisterScreen, _React$Component);\n\n  function RegisterScreen() {\n    var _this;\n\n    _classCallCheck(this, RegisterScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterScreen).call(this));\n\n    _this.signUp = function () {\n      if (_this.state.email === '') {\n        _this.setState({\n          errorMessage: 'Please enter email id'\n        });\n\n        return;\n      }\n\n      if (_this.state.password === '') {\n        _this.setState({\n          errorMessage: 'Please enter password'\n        });\n\n        return;\n      }\n\n      if (_this.state.password !== _this.state.confirmPassword) {\n        _this.setState({\n          errorMessage: 'Password does not match'\n        });\n\n        return;\n      }\n\n      _this.setState({\n        isLoading: true\n      });\n\n      _this.props.firebase.auth.createUserWithEmailAndPassword(_this.state.email, _this.state.password).then(function (user) {\n        console.log('New User', user);\n\n        _this.setState({\n          isLoading: false\n        });\n\n        _this.props.navigation.navigate('App');\n      }).catch(function (error) {\n        _this.setState({\n          isLoading: false,\n          errorMessage: error.code\n        });\n      });\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      isLoading: false,\n      errorMessage: null\n    };\n    return _this;\n  }\n\n  _createClass(RegisterScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold',\n          color: '#2196f3',\n          marginTop: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        }\n      }, \"Register\"), this.state.errorMessage && React.createElement(Text, {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        }\n      }, this.state.errorMessage), React.createElement(Item, {\n        style: {\n          width: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Email\",\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }\n      })), React.createElement(Item, {\n        style: {\n          width: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        }\n      }, React.createElement(Input, {\n        secureTextEntry: true,\n        placeholder: \"Password\",\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        }\n      })), React.createElement(Item, {\n        style: {\n          width: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      }, React.createElement(Input, {\n        secureTextEntry: true,\n        placeholder: \"Confirm Password\",\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(confirmPassword) {\n          return _this2.setState({\n            confirmPassword: confirmPassword\n          });\n        },\n        value: this.state.confirmPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      })), React.createElement(Button, {\n        onPress: this.signUp,\n        primary: true,\n        style: {\n          justifyContent: 'center',\n          marginTop: 8,\n          backgroundColor: '#2196f3',\n          width: 150\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }, \" Sign Up \")), this.state.isLoading && React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }));\n    }\n  }]);\n\n  return RegisterScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  }\n});\nexport default withFirebase(RegisterScreen);","map":{"version":3,"sources":["/Users/startek/Desktop/Grace/src/register.js"],"names":["React","Input","Item","Container","Button","Text","withFirebase","RegisterScreen","signUp","state","email","setState","errorMessage","password","confirmPassword","isLoading","props","firebase","auth","createUserWithEmailAndPassword","then","user","console","log","navigation","navigate","catch","error","code","styles","container","fontWeight","color","marginTop","width","justifyContent","backgroundColor","Component","StyleSheet","create","flex","alignItems"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, ActivityIndicator } from 'react-native';\nimport { Input, Item, Container, Button, Text } from 'native-base';\nimport { withFirebase } from './firebase/firebase';\n\nclass RegisterScreen extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      isLoading: false,\n      errorMessage: null\n    };\n  }\n\n  render() {\n    return (\n      <Container style={styles.container}>\n        <Text style={{ fontWeight: 'bold', color: '#2196f3', marginTop: 16 }}>Register</Text>\n        {this.state.errorMessage && <Text style={{ color: 'red' }}>{this.state.errorMessage}</Text>}\n        <Item style={{ width: 300 }}>\n          <Input\n            placeholder=\"Email\"\n            autoCapitalize=\"none\"\n            onChangeText={email => this.setState({ email })}\n            value={this.state.email}\n          />\n        </Item>\n\n        <Item style={{ width: 300 }}>\n          <Input\n            secureTextEntry\n            placeholder=\"Password\"\n            autoCapitalize=\"none\"\n            onChangeText={password => this.setState({ password })}\n            value={this.state.password}\n          />\n        </Item>\n\n        <Item style={{ width: 300 }}>\n          <Input\n            secureTextEntry\n            placeholder=\"Confirm Password\"\n            autoCapitalize=\"none\"\n            onChangeText={confirmPassword => this.setState({ confirmPassword })}\n            value={this.state.confirmPassword}\n          />\n        </Item>\n\n        <Button\n          onPress={this.signUp}\n          primary\n          style={{\n            justifyContent: 'center',\n            marginTop: 8,\n            backgroundColor: '#2196f3',\n            width: 150\n          }}>\n          <Text style={{ fontWeight: 'bold' }}> Sign Up </Text>\n        </Button>\n        {this.state.isLoading && <ActivityIndicator size=\"large\" />}\n      </Container>\n    );\n  }\n\n  signUp = () => {\n    if (this.state.email === '') {\n      this.setState({ errorMessage: 'Please enter email id' });\n      return;\n    }\n    if (this.state.password === '') {\n      this.setState({ errorMessage: 'Please enter password' });\n      return;\n    }\n\n    if (this.state.password !== this.state.confirmPassword) {\n      this.setState({ errorMessage: 'Password does not match' });\n      return;\n    }\n\n    this.setState({ isLoading: true });\n    this.props.firebase.auth\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then(user => {\n        console.log('New User', user);\n        this.setState({ isLoading: false });\n        this.props.navigation.navigate('App');\n      })\n      .catch(error => {\n        this.setState({ isLoading: false, errorMessage: error.code });\n      });\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  }\n});\n\nexport default withFirebase(RegisterScreen);\n"]},"metadata":{},"sourceType":"module"}
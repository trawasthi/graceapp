{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/startek/Desktop/Grace/App.js\";\nimport React from 'react';\nimport * as Font from 'expo-font';\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport _ from 'lodash';\nimport Navigation from \"./src/navigation\";\nimport Firebase, { FirebaseContext } from \"./src/firebase/firebase\";\nYellowBox.ignoreWarnings(['Setting a timer']);\n\nvar _console = _.clone(console);\n\nconsole.warn = function (message) {\n  if (message.indexOf('Setting a timer') <= -1) {\n    _console.warn(message);\n  }\n};\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      return _regeneratorRuntime.async(function componentWillMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                Roboto: require('native-base/Fonts/Roboto.ttf'),\n                Roboto_medium: require('native-base/Fonts/Roboto_medium.ttf')\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(FirebaseContext.Provider, {\n        value: new Firebase(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        }\n      }, React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/startek/Desktop/Grace/App.js"],"names":["React","Font","_","Navigation","Firebase","FirebaseContext","YellowBox","ignoreWarnings","_console","clone","console","warn","message","indexOf","App","loadAsync","Roboto","require","Roboto_medium","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;;AAEA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP,IAAmBC,eAAnB;AAEAC,SAAS,CAACC,cAAV,CAAyB,CAAC,iBAAD,CAAzB;;AACA,IAAMC,QAAQ,GAAGN,CAAC,CAACO,KAAF,CAAQC,OAAR,CAAjB;;AACAA,OAAO,CAACC,IAAR,GAAe,UAAAC,OAAO,EAAI;AACxB,MAAIA,OAAO,CAACC,OAAR,CAAgB,iBAAhB,KAAsC,CAAC,CAA3C,EAA8C;AAC5CL,IAAAA,QAAQ,CAACG,IAAT,CAAcC,OAAd;AACD;AACF,CAJD;;IAKME,G;;;;;;;;;;;;;;;;;+CAEIb,IAAI,CAACc,SAAL,CAAe;AACnBC,gBAAAA,MAAM,EAAEC,OAAO,CAAC,8BAAD,CADI;AAEnBC,gBAAAA,aAAa,EAAED,OAAO,CAAC,qCAAD;AAFH,eAAf,C;;;;;;;;;;;6BAMC;AACP,aACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,QAAA,KAAK,EAAE,IAAIb,QAAJ,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAdeJ,KAAK,CAACmB,S;;AAiBxB,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport * as Font from 'expo-font';\nimport { YellowBox } from 'react-native';\nimport _ from 'lodash';\nimport Navigation from './src/navigation';\nimport Firebase, { FirebaseContext } from './src/firebase/firebase';\n\nYellowBox.ignoreWarnings(['Setting a timer']);\nconst _console = _.clone(console);\nconsole.warn = message => {\n  if (message.indexOf('Setting a timer') <= -1) {\n    _console.warn(message);\n  }\n};\nclass App extends React.Component {\n  async componentWillMount() {\n    await Font.loadAsync({\n      Roboto: require('native-base/Fonts/Roboto.ttf'),\n      Roboto_medium: require('native-base/Fonts/Roboto_medium.ttf')\n    });\n  }\n\n  render() {\n    return (\n      <FirebaseContext.Provider value={new Firebase()}>\n        <Navigation />\n      </FirebaseContext.Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
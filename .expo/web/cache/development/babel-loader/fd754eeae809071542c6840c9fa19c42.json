{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/startek/Desktop/Grace/src/addappointment.js\";\nimport React, { Component } from 'react';\nimport { Container, Content, Text, Form, Label, Item, Input, Button, View, List, ListItem, Body, Right, Icon } from 'native-base';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { withFirebase } from \"./firebase/firebase\";\n\nvar AddAppointmentClass = function (_Component) {\n  _inherits(AddAppointmentClass, _Component);\n\n  function AddAppointmentClass() {\n    var _this;\n\n    _classCallCheck(this, AddAppointmentClass);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddAppointmentClass).call(this));\n\n    _this.showDateTimePicker = function () {\n      _this.setState({\n        isDateTimePickerVisible: true\n      });\n    };\n\n    _this.hideDateTimePicker = function () {\n      _this.setState({\n        isDateTimePickerVisible: false\n      });\n    };\n\n    _this.handleDatePicked = function (date) {\n      var data = date.toLocaleString();\n\n      _this.setState({\n        datetime: [].concat(_toConsumableArray(_this.state.datetime), [data])\n      });\n\n      _this.hideDateTimePicker();\n    };\n\n    _this.onFormSubmit = function () {\n      if (_this.state.datetime.length === 0) {\n        Alert.alert('Invalid Input', 'Please at least 1 date and time', [{\n          text: 'Ok',\n          onPress: function onPress() {\n            return null;\n          }\n        }]);\n        return;\n      }\n\n      _this.props.firebase.db.ref('/Available_Appointments').once('value').then(function (snapshot) {\n        var _data;\n\n        var data = snapshot.val();\n\n        if (data === null || data === undefined) {\n          data = [];\n        }\n\n        console.log('data val', data);\n\n        (_data = data).push.apply(_data, _toConsumableArray(_this.state.datetime));\n\n        _this.props.firebase.db.ref('Available_Appointments/').set(data, function (error) {\n          if (error) {\n            Alert.alert('Faild', 'Failed to add appointment. Please try again later.', [{\n              text: 'Ok',\n              onPress: function onPress() {\n                _this.props.navigation.navigate('Home');\n              }\n            }]);\n          } else {\n            Alert.alert('Done', 'You have added new appointment.', [{\n              text: 'Ok',\n              onPress: function onPress() {\n                _this.props.navigation.navigate('Home');\n              }\n            }]);\n          }\n        });\n      });\n    };\n\n    _this.state = {\n      datetime: [],\n      isDateTimePickerVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(AddAppointmentClass, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        }\n      }, React.createElement(View, {\n        padder: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, React.createElement(Button, {\n        style: {\n          textAlign: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundColor: '#2196f3'\n        },\n        primary: true,\n        rounded: true,\n        onPress: this.showDateTimePicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      }, \" Select Dates \")), React.createElement(DateTimePicker, {\n        isVisible: this.state.isDateTimePickerVisible,\n        onConfirm: this.handleDatePicked,\n        onCancel: this.hideDateTimePicker,\n        mode: \"datetime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        }\n      }, '\\n'), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        }\n      }, this.state.datetime.map(function (time, i) {\n        return React.createElement(ListItem, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          }\n        }, React.createElement(Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          }\n        }, time)), React.createElement(Right, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          }\n        }, React.createElement(Icon, {\n          name: \"arrow-forward\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          }\n        })));\n      })), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        }\n      }, '\\n'), this.state.datetime.length > 0 && React.createElement(Button, {\n        style: {\n          textAlign: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundColor: '#f44336'\n        },\n        primary: true,\n        onPress: this.onFormSubmit,\n        rounded: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        }\n      }, \" Add Dates \"))));\n    }\n  }]);\n\n  return AddAppointmentClass;\n}(Component);\n\nvar AddAppointment = withFirebase(AddAppointmentClass);\nAddAppointment.navigationOptions = {\n  title: 'Appointments'\n};\nexport default AddAppointment;","map":{"version":3,"sources":["/Users/startek/Desktop/Grace/src/addappointment.js"],"names":["React","Component","Container","Content","Text","Form","Label","Item","Input","Button","View","List","ListItem","Body","Right","Icon","DateTimePicker","ScrollView","withFirebase","AddAppointmentClass","showDateTimePicker","setState","isDateTimePickerVisible","hideDateTimePicker","handleDatePicked","date","data","toLocaleString","datetime","state","onFormSubmit","length","Alert","alert","text","onPress","props","firebase","db","ref","once","then","snapshot","val","undefined","console","log","push","set","error","navigation","navigate","textAlign","justifyContent","alignItems","backgroundColor","fontWeight","map","time","i","AddAppointment","navigationOptions","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Container,\n  Content,\n  Text,\n  Form,\n  Label,\n  Item,\n  Input,\n  Button,\n  View,\n  List,\n  ListItem,\n  Body,\n  Right,\n  Icon\n} from 'native-base';\nimport { ActivityIndicator, Alert } from 'react-native';\nimport DateTimePicker from 'react-native-modal-datetime-picker';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { withFirebase } from './firebase/firebase';\n\n// Main class for adding booking date and time\nclass AddAppointmentClass extends Component {\n  constructor() {\n    super();\n    this.state = { datetime: [], isDateTimePickerVisible: false };\n  }\n\n  showDateTimePicker = () => {\n    this.setState({ isDateTimePickerVisible: true });\n  };\n\n  hideDateTimePicker = () => {\n    this.setState({ isDateTimePickerVisible: false });\n  };\n\n  handleDatePicked = date => {\n    const data = date.toLocaleString();\n    this.setState({ datetime: [...this.state.datetime, data] });\n    this.hideDateTimePicker();\n  };\n\n  onFormSubmit = () => {\n    if (this.state.datetime.length === 0) {\n      Alert.alert('Invalid Input', 'Please at least 1 date and time', [\n        {\n          text: 'Ok',\n          onPress: () => {\n            return null;\n          }\n        }\n      ]);\n      return;\n    }\n\n    this.props.firebase.db\n      .ref('/Available_Appointments')\n      .once('value')\n      .then(snapshot => {\n        let data = snapshot.val();\n\n        if (data === null || data === undefined) {\n          data = [];\n        }\n        console.log('data val', data);\n        data.push(...this.state.datetime);\n        this.props.firebase.db.ref('Available_Appointments/').set(data, error => {\n          // error handling\n          if (error) {\n            Alert.alert('Faild', 'Failed to add appointment. Please try again later.', [\n              {\n                text: 'Ok',\n                onPress: () => {\n                  this.props.navigation.navigate('Home');\n                }\n              }\n            ]);\n          } else {\n            // display success message\n            Alert.alert('Done', 'You have added new appointment.', [\n              {\n                text: 'Ok',\n                onPress: () => {\n                  this.props.navigation.navigate('Home');\n                }\n              }\n            ]);\n          }\n        });\n      });\n  };\n\n  render() {\n    return (\n      <ScrollView>\n        <View padder>\n          <Button\n            style={{\n              textAlign: 'center',\n              justifyContent: 'center',\n              alignItems: 'center',\n              backgroundColor: '#2196f3'\n            }}\n            primary\n            rounded\n            onPress={this.showDateTimePicker}>\n            <Text style={{ fontWeight: 'bold' }}> Select Dates </Text>\n          </Button>\n\n          <DateTimePicker\n            isVisible={this.state.isDateTimePickerVisible}\n            onConfirm={this.handleDatePicked}\n            onCancel={this.hideDateTimePicker}\n            mode=\"datetime\"\n          />\n          <Text>{'\\n'}</Text>\n\n          <List>\n            {this.state.datetime.map((time, i) => (\n              <ListItem key={i}>\n                <Body>\n                  <Text>{time}</Text>\n                </Body>\n                <Right>\n                  <Icon name=\"arrow-forward\" />\n                </Right>\n              </ListItem>\n            ))}\n          </List>\n          <Text>{'\\n'}</Text>\n          {this.state.datetime.length > 0 && (\n            <Button\n              style={{\n                textAlign: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n                backgroundColor: '#f44336'\n              }}\n              primary\n              onPress={this.onFormSubmit}\n              rounded>\n              <Text style={{ fontWeight: 'bold' }}> Add Dates </Text>\n            </Button>\n          )}\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\n// connect booking class to firebase functions\nconst AddAppointment = withFirebase(AddAppointmentClass);\nAddAppointment.navigationOptions = {\n  title: 'Appointments'\n};\n\nexport default AddAppointment;\n"]},"metadata":{},"sourceType":"module"}
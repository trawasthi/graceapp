{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/satya/Workspace/Callstack/drawer/src/navigators/createDrawerNavigator.tsx\";\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { createNavigator } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\nimport DrawerRouter from \"../routers/DrawerRouter\";\nimport DrawerView from \"../views/DrawerView\";\nimport DrawerItems from \"../views/DrawerNavigatorItems\";\n\nvar defaultContentComponent = function defaultContentComponent(props) {\n  return React.createElement(ScrollView, {\n    alwaysBounceVertical: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    }\n  }, React.createElement(SafeAreaView, {\n    forceInset: {\n      top: 'always',\n      horizontal: 'never'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    }\n  }, React.createElement(DrawerItems, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    }\n  }))));\n};\n\nvar DefaultDrawerConfig = {\n  drawerWidth: function drawerWidth() {\n    var _Dimensions$get = Dimensions.get('window'),\n        height = _Dimensions$get.height,\n        width = _Dimensions$get.width;\n\n    var smallerAxisSize = Math.min(height, width);\n    var isLandscape = width > height;\n    var isTablet = smallerAxisSize >= 600;\n    var appBarHeight = Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n    var maxWidth = isTablet ? 320 : 280;\n    return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n  },\n  contentComponent: defaultContentComponent,\n  drawerPosition: I18nManager.isRTL ? 'right' : 'left',\n  keyboardDismissMode: 'on-drag',\n  drawerBackgroundColor: 'white',\n  drawerType: 'front',\n  hideStatusBar: false,\n  statusBarAnimation: 'slide'\n};\n\nvar DrawerNavigator = function DrawerNavigator(routeConfigs) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var mergedConfig = _objectSpread({}, DefaultDrawerConfig, config);\n\n  var drawerRouter = DrawerRouter(routeConfigs, mergedConfig);\n  var navigator = createNavigator(DrawerView, drawerRouter, mergedConfig);\n  return navigator;\n};\n\nexport default DrawerNavigator;","map":{"version":3,"sources":["createDrawerNavigator.tsx"],"names":["defaultContentComponent","top","horizontal","DefaultDrawerConfig","drawerWidth","height","width","Dimensions","smallerAxisSize","Math","isLandscape","isTablet","appBarHeight","Platform","maxWidth","contentComponent","drawerPosition","I18nManager","keyboardDismissMode","drawerBackgroundColor","drawerType","hideStatusBar","statusBarAnimation","DrawerNavigator","config","mergedConfig","drawerRouter","DrawerRouter","navigator","createNavigator"],"mappings":";;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;;AAEA,SAAA,eAAA,QAAA,wBAAA;AACA,SAAA,YAAA,QAAA,0BAAA;AACA,OAAA,YAAA;AACA,OAAA,UAAA;AACA,OAAA,WAAA;;AAMA,IAAMA,uBAAuB,GAAvBA,SAAAA,uBAAAA,CAA0B,KAA1BA,EAA0B;AAAA,SAC9B,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAY,IAAA,oBAAoB,EAAhC,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA;AAAA,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA;AAAc,IAAA,UAAU,EAAE;AAAEC,MAAAA,GAAG,EAAL,QAAA;AAAiBC,MAAAA,UAAU,EAArD;AAA0B,KAA1B;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA;AAAA,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAH0B;AAG1B;AAAA,GAAA,CAAA,CADF,CADF,CAD8B;AAAhC,CAAA;;AAQA,IAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,WAAW,EAAE,SAAA,WAAA,GAAM;AAAA,QAAA,eAAA,GAMSG,UAAU,CAAVA,GAAAA,CANT,QAMSA,CANT;AAAA,QAMTF,MANS,GAAA,eAAA,CAAA,MAAA;AAAA,QAMDC,KANC,GAAA,eAAA,CAAA,KAAA;;AAOjB,QAAME,eAAe,GAAGC,IAAI,CAAJA,GAAAA,CAAAA,MAAAA,EAAxB,KAAwBA,CAAxB;AACA,QAAMC,WAAW,GAAGJ,KAAK,GAAzB,MAAA;AACA,QAAMK,QAAQ,GAAGH,eAAe,IAAhC,GAAA;AACA,QAAMI,YAAY,GAAGC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAyBH,WAAW,GAAA,EAAA,GAApCG,EAAAA,GAArB,EAAA;AACA,QAAMC,QAAQ,GAAGH,QAAQ,GAAA,GAAA,GAAzB,GAAA;AAEA,WAAOF,IAAI,CAAJA,GAAAA,CAASD,eAAe,GAAxBC,YAAAA,EAAP,QAAOA,CAAP;AAdwB,GAAA;AAgB1BM,EAAAA,gBAAgB,EAhBU,uBAAA;AAiB1BC,EAAAA,cAAc,EAAEC,WAAW,CAAXA,KAAAA,GAAAA,OAAAA,GAjBU,MAAA;AAkB1BC,EAAAA,mBAAmB,EAlBO,SAAA;AAmB1BC,EAAAA,qBAAqB,EAnBK,OAAA;AAoB1BC,EAAAA,UAAU,EApBgB,OAAA;AAqB1BC,EAAAA,aAAa,EArBa,KAAA;AAsB1BC,EAAAA,kBAAkB,EAtBpB;AAA4B,CAA5B;;AAyBA,IAAMC,eAAe,GAAfA,SAAAA,eAAAA,CAAkB,YAAlBA,EAA8D;AAArBC,MAAAA,MAAqB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,EAAdA;;AAC7C,MAAMC,YAAY,GAAA,aAAA,CAAA,EAAA,EAAA,mBAAA,EAAlB,MAAkB,CAAlB;;AACA,MAAMC,YAAY,GAAGC,YAAY,CAAA,YAAA,EAAjC,YAAiC,CAAjC;AACA,MAAMC,SAAS,GAAGC,eAAe,CAAA,UAAA,EAAA,YAAA,EAAjC,YAAiC,CAAjC;AACA,SAAA,SAAA;AAJF,CAAA;;AAOA,eAAA,eAAA","sourcesContent":["import * as React from 'react';\nimport { Dimensions, Platform, ScrollView, I18nManager } from 'react-native';\nimport { createNavigator } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\nimport DrawerRouter from '../routers/DrawerRouter';\nimport DrawerView from '../views/DrawerView';\nimport DrawerItems, { Props } from '../views/DrawerNavigatorItems';\n\n// A stack navigators props are the intersection between\n// the base navigator props (navgiation, screenProps, etc)\n// and the view's props\n\nconst defaultContentComponent = (props: Props) => (\n  <ScrollView alwaysBounceVertical={false}>\n    <SafeAreaView forceInset={{ top: 'always', horizontal: 'never' }}>\n      <DrawerItems {...props} />\n    </SafeAreaView>\n  </ScrollView>\n);\n\nconst DefaultDrawerConfig = {\n  drawerWidth: () => {\n    /*\n     * Default drawer width is screen width - header height\n     * with a max width of 280 on mobile and 320 on tablet\n     * https://material.io/guidelines/patterns/navigation-drawer.html\n     */\n    const { height, width } = Dimensions.get('window');\n    const smallerAxisSize = Math.min(height, width);\n    const isLandscape = width > height;\n    const isTablet = smallerAxisSize >= 600;\n    const appBarHeight = Platform.OS === 'ios' ? (isLandscape ? 32 : 44) : 56;\n    const maxWidth = isTablet ? 320 : 280;\n\n    return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n  },\n  contentComponent: defaultContentComponent,\n  drawerPosition: I18nManager.isRTL ? 'right' : 'left',\n  keyboardDismissMode: 'on-drag',\n  drawerBackgroundColor: 'white',\n  drawerType: 'front',\n  hideStatusBar: false,\n  statusBarAnimation: 'slide',\n};\n\nconst DrawerNavigator = (routeConfigs: object, config: any = {}) => {\n  const mergedConfig = { ...DefaultDrawerConfig, ...config };\n  const drawerRouter = DrawerRouter(routeConfigs, mergedConfig);\n  const navigator = createNavigator(DrawerView, drawerRouter, mergedConfig);\n  return navigator;\n};\n\nexport default DrawerNavigator;\n"]},"metadata":{},"sourceType":"module"}
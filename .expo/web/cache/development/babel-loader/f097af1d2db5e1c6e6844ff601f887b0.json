{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/startek/Desktop/Grace/src/viewappointment.js\";\nimport React, { Component } from 'react';\nimport { Container, Content, Icon, Text, List, ListItem, Left, Right, Body } from 'native-base';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { withFirebase } from \"./firebase/firebase\";\n\nvar ViewAppointmentClass = function (_Component) {\n  _inherits(ViewAppointmentClass, _Component);\n\n  function ViewAppointmentClass() {\n    var _this;\n\n    _classCallCheck(this, ViewAppointmentClass);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewAppointmentClass).call(this));\n    _this.state = {\n      list: [],\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(ViewAppointmentClass, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.firebase.db.ref('/Booked_Appointments').on('value', function (snapshot) {\n        var data = snapshot.val();\n\n        if (data === null) {\n          _this2.setState({\n            isLoading: false\n          });\n\n          return;\n        }\n\n        var dataArray = Object.values(data);\n\n        _this2.setState({\n          list: dataArray,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.firebase.db.ref('/Booked_Appointments').off('value');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        }\n      }, React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }, this.state.list.map(function (user, i) {\n        return React.createElement(ListItem, {\n          key: i,\n          onPress: function onPress() {\n            _this3.props.navigation.navigate('UserAppointment', {\n              user: user\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          }\n        }, React.createElement(Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          }\n        }, user.Name), React.createElement(Text, {\n          note: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          }\n        }, user.BookingTime)), React.createElement(Right, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          }\n        }, React.createElement(Icon, {\n          name: \"arrow-forward\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          }\n        })));\n      })), this.state.isLoading && React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        }\n      })));\n    }\n  }]);\n\n  return ViewAppointmentClass;\n}(Component);\n\nvar ViewAppointment = withFirebase(ViewAppointmentClass);\nViewAppointment.navigationOptions = {\n  title: 'Appointments'\n};\nexport default ViewAppointment;","map":{"version":3,"sources":["/Users/startek/Desktop/Grace/src/viewappointment.js"],"names":["React","Component","Container","Content","Icon","Text","List","ListItem","Left","Right","Body","withFirebase","ViewAppointmentClass","state","list","isLoading","props","firebase","db","ref","on","snapshot","data","val","setState","dataArray","Object","values","off","map","user","i","navigation","navigate","Name","BookingTime","ViewAppointment","navigationOptions","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,IAAnC,EAAyCC,IAAzC,EAA+CC,QAA/C,EAAyDC,IAAzD,EAA+DC,KAA/D,EAAsEC,IAAtE,QAAkF,aAAlF;;AAEA,SAASC,YAAT;;IAGMC,oB;;;AACJ,kCAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAFY;AAMb;;;;wCAEmB;AAAA;;AAClB,WAAKC,KAAL,CAAWC,QAAX,CAAoBC,EAApB,CAAuBC,GAAvB,CAA2B,sBAA3B,EAAmDC,EAAnD,CAAsD,OAAtD,EAA+D,UAAAC,QAAQ,EAAI;AACzE,YAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;;AACA,YAAID,IAAI,KAAK,IAAb,EAAmB;AACjB,UAAA,MAAI,CAACE,QAAL,CAAc;AAAET,YAAAA,SAAS,EAAE;AAAb,WAAd;;AACA;AACD;;AACD,YAAMU,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcL,IAAd,CAAlB;;AACA,QAAA,MAAI,CAACE,QAAL,CAAc;AAAEV,UAAAA,IAAI,EAAEW,SAAR;AAAmBV,UAAAA,SAAS,EAAE;AAA9B,SAAd;AACD,OARD;AASD;;;yCAEoB;AACnB,WAAKC,KAAL,CAAWC,QAAX,CAAoBC,EAApB,CAAuBC,GAAvB,CAA2B,sBAA3B,EAAmDS,GAAnD,CAAuD,OAAvD;AACD;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKf,KAAL,CAAWC,IAAX,CAAgBe,GAAhB,CAAoB,UAACC,IAAD,EAAOC,CAAP;AAAA,eACnB,oBAAC,QAAD;AACE,UAAA,GAAG,EAAEA,CADP;AAEE,UAAA,OAAO,EAAE,mBAAM;AACb,YAAA,MAAI,CAACf,KAAL,CAAWgB,UAAX,CAAsBC,QAAtB,CAA+B,iBAA/B,EAAkD;AAAEH,cAAAA,IAAI,EAAJA;AAAF,aAAlD;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOA,IAAI,CAACI,IAAZ,CADF,EAEE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYJ,IAAI,CAACK,WAAjB,CAFF,CALF,EASE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CATF,CADmB;AAAA,OAApB,CADH,CADF,EAkBG,KAAKtB,KAAL,CAAWE,SAAX,IAAwB,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,QAlB3B,CADF,CADF;AAwBD;;;;EAlDgCd,S;;AAsDnC,IAAMmC,eAAe,GAAGzB,YAAY,CAACC,oBAAD,CAApC;AACAwB,eAAe,CAACC,iBAAhB,GAAoC;AAClCC,EAAAA,KAAK,EAAE;AAD2B,CAApC;AAIA,eAAeF,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Content, Icon, Text, List, ListItem, Left, Right, Body } from 'native-base';\nimport { ActivityIndicator } from 'react-native';\nimport { withFirebase } from './firebase/firebase';\n\n// Main class for booking\nclass ViewAppointmentClass extends Component {\n  constructor() {\n    super();\n    this.state = {\n      list: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.firebase.db.ref('/Booked_Appointments').on('value', snapshot => {\n      const data = snapshot.val();\n      if (data === null) {\n        this.setState({ isLoading: false });\n        return;\n      }\n      const dataArray = Object.values(data);\n      this.setState({ list: dataArray, isLoading: false });\n    });\n  }\n\n  componentWillMount() {\n    this.props.firebase.db.ref('/Booked_Appointments').off('value');\n  }\n\n  render() {\n    return (\n      <Container>\n        <Content>\n          <List>\n            {this.state.list.map((user, i) => (\n              <ListItem\n                key={i}\n                onPress={() => {\n                  this.props.navigation.navigate('UserAppointment', { user });\n                }}>\n                <Body>\n                  <Text>{user.Name}</Text>\n                  <Text note>{user.BookingTime}</Text>\n                </Body>\n                <Right>\n                  <Icon name=\"arrow-forward\" />\n                </Right>\n              </ListItem>\n            ))}\n          </List>\n          {this.state.isLoading && <ActivityIndicator size=\"large\" />}\n        </Content>\n      </Container>\n    );\n  }\n}\n\n// connect booking class to firebase functions\nconst ViewAppointment = withFirebase(ViewAppointmentClass);\nViewAppointment.navigationOptions = {\n  title: 'Appointments'\n};\n\nexport default ViewAppointment;\n"]},"metadata":{},"sourceType":"module"}
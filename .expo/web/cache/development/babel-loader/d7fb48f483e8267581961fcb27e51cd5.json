{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport * as animatable from 'react-native-animatable';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nexport var initializeAnimations = function initializeAnimations() {\n  var makeSlideTranslation = function makeSlideTranslation(translationType, fromValue, toValue) {\n    return {\n      from: _defineProperty({}, translationType, fromValue),\n      to: _defineProperty({}, translationType, toValue)\n    };\n  };\n\n  var animationDefinitions = {\n    slideInDown: makeSlideTranslation('translateY', -height, 0),\n    slideInUp: makeSlideTranslation('translateY', height, 0),\n    slideInLeft: makeSlideTranslation('translateX', -width, 0),\n    slideInRight: makeSlideTranslation('translateX', width, 0),\n    slideOutDown: makeSlideTranslation('translateY', 0, height),\n    slideOutUp: makeSlideTranslation('translateY', 0, -height),\n    slideOutLeft: makeSlideTranslation('translateX', 0, -width),\n    slideOutRight: makeSlideTranslation('translateX', 0, width)\n  };\n  animatable.initializeRegistryWithDefinitions(animationDefinitions);\n};\nexport var buildAnimations = function buildAnimations(_ref) {\n  var animationIn = _ref.animationIn,\n      animationOut = _ref.animationOut;\n  var updatedAnimationIn = animationIn;\n  var updatedAnimationOut = animationOut;\n\n  if (isObject(animationIn)) {\n    var animationName = JSON.stringify(animationIn);\n    makeAnimation(animationName, animationIn);\n    updatedAnimationIn = animationName;\n  }\n\n  if (isObject(animationOut)) {\n    var _animationName = JSON.stringify(animationOut);\n\n    makeAnimation(_animationName, animationOut);\n    updatedAnimationOut = _animationName;\n  }\n\n  return {\n    animationIn: updatedAnimationIn,\n    animationOut: updatedAnimationOut\n  };\n};\n\nvar makeAnimation = function makeAnimation(name, obj) {\n  animatable.registerAnimation(name, animatable.createAnimation(obj));\n};\n\nvar isObject = function isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n};","map":{"version":3,"sources":["/Users/startek/Desktop/Grace/node_modules/react-native-modal/src/utils.js"],"names":["animatable","Dimensions","get","height","width","initializeAnimations","makeSlideTranslation","translationType","fromValue","toValue","from","to","animationDefinitions","slideInDown","slideInUp","slideInLeft","slideInRight","slideOutDown","slideOutUp","slideOutLeft","slideOutRight","initializeRegistryWithDefinitions","buildAnimations","animationIn","animationOut","updatedAnimationIn","updatedAnimationOut","isObject","animationName","JSON","stringify","makeAnimation","name","obj","registerAnimation","createAnimation"],"mappings":";;AACA,OAAO,KAAKA,UAAZ,MAA4B,yBAA5B;;sBAE0BC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAlBC,M,mBAAAA,M;IAAQC,K,mBAAAA,K;;AAEhB,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACxC,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,eAAD,EAAkBC,SAAlB,EAA6BC,OAA7B,EAAyC;AACpE,WAAO;AACLC,MAAAA,IAAI,sBACDH,eADC,EACiBC,SADjB,CADC;AAILG,MAAAA,EAAE,sBACCJ,eADD,EACmBE,OADnB;AAJG,KAAP;AAQD,GATD;;AAYA,MAAMG,oBAAoB,GAAG;AAC3BC,IAAAA,WAAW,EAAEP,oBAAoB,CAAC,YAAD,EAAe,CAACH,MAAhB,EAAwB,CAAxB,CADN;AAE3BW,IAAAA,SAAS,EAAER,oBAAoB,CAAC,YAAD,EAAeH,MAAf,EAAuB,CAAvB,CAFJ;AAG3BY,IAAAA,WAAW,EAAET,oBAAoB,CAAC,YAAD,EAAe,CAACF,KAAhB,EAAuB,CAAvB,CAHN;AAI3BY,IAAAA,YAAY,EAAEV,oBAAoB,CAAC,YAAD,EAAeF,KAAf,EAAsB,CAAtB,CAJP;AAK3Ba,IAAAA,YAAY,EAAEX,oBAAoB,CAAC,YAAD,EAAe,CAAf,EAAkBH,MAAlB,CALP;AAM3Be,IAAAA,UAAU,EAAEZ,oBAAoB,CAAC,YAAD,EAAe,CAAf,EAAkB,CAACH,MAAnB,CANL;AAO3BgB,IAAAA,YAAY,EAAEb,oBAAoB,CAAC,YAAD,EAAe,CAAf,EAAkB,CAACF,KAAnB,CAPP;AAQ3BgB,IAAAA,aAAa,EAAEd,oBAAoB,CAAC,YAAD,EAAe,CAAf,EAAkBF,KAAlB;AARR,GAA7B;AAUAJ,EAAAA,UAAU,CAACqB,iCAAX,CAA6CT,oBAA7C;AACD,CAxBM;AA4BP,OAAO,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,OAAmC;AAAA,MAAhCC,WAAgC,QAAhCA,WAAgC;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAChE,MAAIC,kBAAkB,GAAGF,WAAzB;AACA,MAAIG,mBAAmB,GAAGF,YAA1B;;AAEA,MAAIG,QAAQ,CAACJ,WAAD,CAAZ,EAA2B;AACzB,QAAMK,aAAa,GAAGC,IAAI,CAACC,SAAL,CAAeP,WAAf,CAAtB;AACAQ,IAAAA,aAAa,CAACH,aAAD,EAAgBL,WAAhB,CAAb;AACAE,IAAAA,kBAAkB,GAAGG,aAArB;AACD;;AAED,MAAID,QAAQ,CAACH,YAAD,CAAZ,EAA4B;AAC1B,QAAMI,cAAa,GAAGC,IAAI,CAACC,SAAL,CAAeN,YAAf,CAAtB;;AACAO,IAAAA,aAAa,CAACH,cAAD,EAAgBJ,YAAhB,CAAb;AACAE,IAAAA,mBAAmB,GAAGE,cAAtB;AACD;;AAED,SAAO;AACLL,IAAAA,WAAW,EAAEE,kBADR;AAELD,IAAAA,YAAY,EAAEE;AAFT,GAAP;AAID,CApBM;;AAsBP,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,GAAP,EAAe;AACnCjC,EAAAA,UAAU,CAACkC,iBAAX,CAA6BF,IAA7B,EAAmChC,UAAU,CAACmC,eAAX,CAA2BF,GAA3B,CAAnC;AACD,CAFD;;AAIA,IAAMN,QAAQ,GAAG,SAAXA,QAAW,CAAAM,GAAG,EAAI;AACtB,SAAOA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,QAAtC;AACD,CAFD","sourcesContent":["import { Dimensions } from 'react-native';\nimport * as animatable from 'react-native-animatable';\n\nconst { height, width } = Dimensions.get('window');\n\nexport const initializeAnimations = () => {\n  const makeSlideTranslation = (translationType, fromValue, toValue) => {\n    return {\n      from: {\n        [translationType]: fromValue,\n      },\n      to: {\n        [translationType]: toValue,\n      },\n    };\n  };\n  // Since react-native-animatable applies by default a margin of 100 to its\n  // sliding animation, we reset them here overriding the margin to 0.\n  const animationDefinitions = {\n    slideInDown: makeSlideTranslation('translateY', -height, 0),\n    slideInUp: makeSlideTranslation('translateY', height, 0),\n    slideInLeft: makeSlideTranslation('translateX', -width, 0),\n    slideInRight: makeSlideTranslation('translateX', width, 0),\n    slideOutDown: makeSlideTranslation('translateY', 0, height),\n    slideOutUp: makeSlideTranslation('translateY', 0, -height),\n    slideOutLeft: makeSlideTranslation('translateX', 0, -width),\n    slideOutRight: makeSlideTranslation('translateX', 0, width),\n  };\n  animatable.initializeRegistryWithDefinitions(animationDefinitions);\n};\n\n// User can define custom react-native-animatable animations, see PR #72\n// Utility for creating our own custom react-native-animatable animations\nexport const buildAnimations = ({ animationIn, animationOut }) => {\n  let updatedAnimationIn = animationIn;\n  let updatedAnimationOut = animationOut;\n\n  if (isObject(animationIn)) {\n    const animationName = JSON.stringify(animationIn);\n    makeAnimation(animationName, animationIn);\n    updatedAnimationIn = animationName;\n  }\n\n  if (isObject(animationOut)) {\n    const animationName = JSON.stringify(animationOut);\n    makeAnimation(animationName, animationOut);\n    updatedAnimationOut = animationName;\n  }\n\n  return {\n    animationIn: updatedAnimationIn,\n    animationOut: updatedAnimationOut,\n  };\n};\n\nconst makeAnimation = (name, obj) => {\n  animatable.registerAnimation(name, animatable.createAnimation(obj));\n};\n\nconst isObject = obj => {\n  return obj !== null && typeof obj === 'object';\n};\n"]},"metadata":{},"sourceType":"module"}